(function() {var implementors = {};
implementors["halo2_gadgets"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_gadgets/ecc/chip/struct.NonIdentityEccPoint.html\" title=\"struct halo2_gadgets::ecc::chip::NonIdentityEccPoint\">NonIdentityEccPoint</a>&gt; for <a class=\"struct\" href=\"halo2_gadgets/ecc/chip/struct.EccPoint.html\" title=\"struct halo2_gadgets::ecc::chip::EccPoint\">EccPoint</a>","synthetic":false,"types":["halo2_gadgets::ecc::chip::EccPoint"]},{"text":"impl&lt;C:&nbsp;CurveAffine, EccChip:&nbsp;<a class=\"trait\" href=\"halo2_gadgets/ecc/trait.EccInstructions.html\" title=\"trait halo2_gadgets::ecc::EccInstructions\">EccInstructions</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_gadgets/ecc/struct.NonIdentityPoint.html\" title=\"struct halo2_gadgets::ecc::NonIdentityPoint\">NonIdentityPoint</a>&lt;C, EccChip&gt;&gt; for <a class=\"struct\" href=\"halo2_gadgets/ecc/struct.Point.html\" title=\"struct halo2_gadgets::ecc::Point\">Point</a>&lt;C, EccChip&gt;","synthetic":false,"types":["halo2_gadgets::ecc::Point"]},{"text":"impl&lt;F:&nbsp;FieldExt&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_gadgets/poseidon/struct.StateWord.html\" title=\"struct halo2_gadgets::poseidon::StateWord\">StateWord</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/circuit/struct.AssignedCell.html\" title=\"struct halo2_proofs::circuit::AssignedCell\">AssignedCell</a>&lt;F, F&gt;","synthetic":false,"types":["halo2_proofs::circuit::AssignedCell"]},{"text":"impl&lt;F:&nbsp;FieldExt&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/circuit/struct.AssignedCell.html\" title=\"struct halo2_proofs::circuit::AssignedCell\">AssignedCell</a>&lt;F, F&gt;&gt; for <a class=\"struct\" href=\"halo2_gadgets/poseidon/struct.StateWord.html\" title=\"struct halo2_gadgets::poseidon::StateWord\">StateWord</a>&lt;F&gt;","synthetic":false,"types":["halo2_gadgets::poseidon::pow5::StateWord"]}];
implementors["halo2_proofs"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>&gt;&gt; for <a class=\"enum\" href=\"halo2_proofs/circuit/layouter/enum.RegionColumn.html\" title=\"enum halo2_proofs::circuit::layouter::RegionColumn\">RegionColumn</a>","synthetic":false,"types":["halo2_proofs::circuit::layouter::RegionColumn"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Selector.html\" title=\"struct halo2_proofs::plonk::Selector\">Selector</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/circuit/layouter/enum.RegionColumn.html\" title=\"enum halo2_proofs::circuit::layouter::RegionColumn\">RegionColumn</a>","synthetic":false,"types":["halo2_proofs::circuit::layouter::RegionColumn"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/circuit/struct.RegionIndex.html\" title=\"struct halo2_proofs::circuit::RegionIndex\">RegionIndex</a>","synthetic":false,"types":["halo2_proofs::circuit::RegionIndex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/circuit/struct.RegionStart.html\" title=\"struct halo2_proofs::circuit::RegionStart\">RegionStart</a>","synthetic":false,"types":["halo2_proofs::circuit::RegionStart"]},{"text":"impl&lt;'r, F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'r mut (dyn <a class=\"trait\" href=\"halo2_proofs/circuit/layouter/trait.RegionLayouter.html\" title=\"trait halo2_proofs::circuit::layouter::RegionLayouter\">RegionLayouter</a>&lt;F&gt; + 'r)&gt; for <a class=\"struct\" href=\"halo2_proofs/circuit/struct.Region.html\" title=\"struct halo2_proofs::circuit::Region\">Region</a>&lt;'r, F&gt;","synthetic":false,"types":["halo2_proofs::circuit::Region"]},{"text":"impl&lt;'r, F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'r mut (dyn <a class=\"trait\" href=\"halo2_proofs/circuit/layouter/trait.TableLayouter.html\" title=\"trait halo2_proofs::circuit::layouter::TableLayouter\">TableLayouter</a>&lt;F&gt; + 'r)&gt; for <a class=\"struct\" href=\"halo2_proofs/circuit/struct.Table.html\" title=\"struct halo2_proofs::circuit::Table\">Table</a>&lt;'r, F&gt;","synthetic":false,"types":["halo2_proofs::circuit::Table"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'_ <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Assigned.html\" title=\"enum halo2_proofs::plonk::Assigned\">Assigned</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Assigned.html\" title=\"enum halo2_proofs::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::assigned::Assigned"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'_ </a>F&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Assigned.html\" title=\"enum halo2_proofs::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::assigned::Assigned"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Assigned.html\" title=\"enum halo2_proofs::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::assigned::Assigned"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, F<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Assigned.html\" title=\"enum halo2_proofs::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::assigned::Assigned"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Advice.html\" title=\"struct halo2_proofs::plonk::Advice\">Advice</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>","synthetic":false,"types":["halo2_proofs::plonk::circuit::Any"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Fixed.html\" title=\"struct halo2_proofs::plonk::Fixed\">Fixed</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>","synthetic":false,"types":["halo2_proofs::plonk::circuit::Any"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Instance.html\" title=\"struct halo2_proofs::plonk::Instance\">Instance</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>","synthetic":false,"types":["halo2_proofs::plonk::circuit::Any"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Advice.html\" title=\"struct halo2_proofs::plonk::Advice\">Advice</a>&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>&gt;","synthetic":false,"types":["halo2_proofs::plonk::circuit::Column"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Fixed.html\" title=\"struct halo2_proofs::plonk::Fixed\">Fixed</a>&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>&gt;","synthetic":false,"types":["halo2_proofs::plonk::circuit::Column"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Instance.html\" title=\"struct halo2_proofs::plonk::Instance\">Instance</a>&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>&gt;","synthetic":false,"types":["halo2_proofs::plonk::circuit::Column"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Expression.html\" title=\"enum halo2_proofs::plonk::Expression\">Expression</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/plonk/struct.Constraint.html\" title=\"struct halo2_proofs::plonk::Constraint\">Constraint</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::circuit::Constraint"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Expression.html\" title=\"enum halo2_proofs::plonk::Expression\">Expression</a>&lt;F&gt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/plonk/struct.Constraint.html\" title=\"struct halo2_proofs::plonk::Constraint\">Constraint</a>&lt;F&gt;","synthetic":false,"types":["halo2_proofs::plonk::circuit::Constraint"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2_proofs/arithmetic/trait.Field.html\" title=\"trait halo2_proofs::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Expression.html\" title=\"enum halo2_proofs::plonk::Expression\">Expression</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Constraint.html\" title=\"struct halo2_proofs::plonk::Constraint\">Constraint</a>&lt;F&gt;&gt;","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"halo2_proofs/plonk/enum.Error.html\" title=\"enum halo2_proofs::plonk::Error\">Error</a>","synthetic":false,"types":["halo2_proofs::plonk::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Column.html\" title=\"struct halo2_proofs::dev::metadata::Column\">Column</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Column"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/plonk/struct.Column.html\" title=\"struct halo2_proofs::plonk::Column\">Column</a>&lt;<a class=\"enum\" href=\"halo2_proofs/plonk/enum.Any.html\" title=\"enum halo2_proofs::plonk::Any\">Any</a>&gt;&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Column.html\" title=\"struct halo2_proofs::dev::metadata::Column\">Column</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Column"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Column.html\" title=\"struct halo2_proofs::dev::metadata::Column\">Column</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.VirtualCell.html\" title=\"struct halo2_proofs::dev::metadata::VirtualCell\">VirtualCell</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::VirtualCell"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Column.html\" title=\"struct halo2_proofs::dev::metadata::Column\">Column</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.VirtualCell.html\" title=\"struct halo2_proofs::dev::metadata::VirtualCell\">VirtualCell</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::VirtualCell"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Gate.html\" title=\"struct halo2_proofs::dev::metadata::Gate\">Gate</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Gate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Gate.html\" title=\"struct halo2_proofs::dev::metadata::Gate\">Gate</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Constraint.html\" title=\"struct halo2_proofs::dev::metadata::Constraint\">Constraint</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Constraint"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Region.html\" title=\"struct halo2_proofs::dev::metadata::Region\">Region</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Region"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;'_ <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"halo2_proofs/dev/metadata/struct.Region.html\" title=\"struct halo2_proofs::dev::metadata::Region\">Region</a>","synthetic":false,"types":["halo2_proofs::dev::metadata::Region"]},{"text":"impl&lt;G:&nbsp;PrimeGroup&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/dev/cost/struct.MarginalProofSize.html\" title=\"struct halo2_proofs::dev::cost::MarginalProofSize\">MarginalProofSize</a>&lt;G&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;PrimeGroup&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"halo2_proofs/dev/cost/struct.ProofSize.html\" title=\"struct halo2_proofs::dev::cost::ProofSize\">ProofSize</a>&lt;G&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()